#+STARTUP: logdone
#+TITLE: How to fix errors when transferring tUSDT to the exchange account?

* Purpose of the document

To fix the error ~exceeds block gas limit~ when sending tUSDT to the exchange account.

* TODO Is there a way to set the log output of geth to verbose?

* TODO Can we run geth in debug mode?

* TODO Is there JSON RPC call which will return the gas price?

* DONE Experiment 1
  CLOSED: [2021-12-31 Fri 13:50]

** DONE Step 1: Change gas ~gasLimit~ in ~genesis.json~ from ~0x47b760~ to ~0xffffff~ 
   CLOSED: [2021-12-31 Fri 13:28]

** DONE Step 2: Re-deploy the testnets
   CLOSED: [2021-12-31 Fri 13:43]
   
** DONE Step 3: Check whether or not the error still occurs
   CLOSED: [2021-12-31 Fri 13:43]

   Yes, it does.

* TODO Experiment 2

** DONE Step 1: Change gas ~gasLimit~ in ~genesis.json~ from ~0x47b760~ to ~0x000001~ 
   CLOSED: [2021-12-31 Fri 14:05]

0x47b760
0x000001
   
** DONE Step 2: Re-deploy the testnets
   CLOSED: [2021-12-31 Fri 14:18]
   
** DONE Step 3: Check whether or not the error still occurs
   CLOSED: [2021-12-31 Fri 14:18]

Now we get a different error: ~insufficient funds for gas * price + value~

~/Users/dp118m/dev/misc/go-ethereum/core/tx_pool.go~:

#+begin_src go
// Transactor should have enough funds to cover the costs
// cost == V + GP * GL
if pool.currentState.GetBalance(from).Cmp(tx.Cost()) < 0 {
	return ErrInsufficientFunds
}
#+end_src

** DONE How much ETH does the exchange account have?
   CLOSED: [2021-12-31 Fri 14:36]

0

* DONE How can I transfer some ETH to the exchange account?
  CLOSED: [2021-12-31 Fri 18:18]

Exchange ETH address: ~0x190FD61ED8fE0067f0f09EA992C1BF96209bab66~

** DONE What ETH transfer scripts do we have?
   CLOSED: [2021-12-31 Fri 18:18]

https://dpisarenko.com/posts/eth-transfers/  

* TODO Experiment 3

In ~entrypoint.sh~, set ~--gpo.maxprice~ to 3 ([[https://geth.ethereum.org/docs/interface/command-line-options][details]]).

* go-ethereum options


#+begin_src 
ACCOUNT OPTIONS:

  --unlock value                      Comma separated list of accounts to unlock

  --password value                    Password file to use for non-interactive password input

  --signer value                      External signer (url or path to ipc file)

  --allow-insecure-unlock             Allow insecure account unlocking when account-related RPCs are exposed by http

  

API AND CONSOLE OPTIONS:

  --ipcdisable                        Disable the IPC-RPC server

  --ipcpath value                     Filename for IPC socket/pipe within the datadir (explicit paths escape it)

  --rpc                               Enable the HTTP-RPC server

  --rpcaddr value                     HTTP-RPC server listening interface (default: "localhost")

  --rpcport value                     HTTP-RPC server listening port (default: 8545)

  --rpcapi value                      API's offered over the HTTP-RPC interface

  --rpc.gascap value                  Sets a cap on gas that can be used in eth_call/estimateGas (default: 0)

  --rpccorsdomain value               Comma separated list of domains from which to accept cross origin requests (browser enforced)

  --rpcvhosts value                   Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. (default: "localhost")

  --ws                                Enable the WS-RPC server

  --wsaddr value                      WS-RPC server listening interface (default: "localhost")

  --wsport value                      WS-RPC server listening port (default: 8546)

  --wsapi value                       API's offered over the WS-RPC interface

  --wsorigins value                   Origins from which to accept websockets requests

  --graphql                           Enable the GraphQL server

  --graphql.addr value                GraphQL server listening interface (default: "localhost")

  --graphql.port value                GraphQL server listening port (default: 8547)

  --graphql.corsdomain value          Comma separated list of domains from which to accept cross origin requests (browser enforced)

  --graphql.vhosts value              Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. (default: "localhost")

  --jspath loadScript                 JavaScript root path for loadScript (default: ".")

  --exec value                        Execute JavaScript statement

  --preload value                     Comma separated list of JavaScript files to preload into the console

  

NETWORKING OPTIONS:

  --bootnodes value                   Comma separated enode URLs for P2P discovery bootstrap (set v4+v5 instead for light servers)

  --bootnodesv4 value                 Comma separated enode URLs for P2P v4 discovery bootstrap (light server, full nodes)

  --bootnodesv5 value                 Comma separated enode URLs for P2P v5 discovery bootstrap (light server, light nodes)

  --discovery.dns value               Sets DNS discovery entry points (use "" to disable DNS)

  --port value                        Network listening port (default: 30303)

  --maxpeers value                    Maximum number of network peers (network disabled if set to 0) (default: 50)

  --maxpendpeers value                Maximum number of pending connection attempts (defaults used if set to 0) (default: 0)

  --nat value                         NAT port mapping mechanism (any|none|upnp|pmp|extip:<IP>) (default: "any")

  --nodiscover                        Disables the peer discovery mechanism (manual peer addition)

  --v5disc                            Enables the experimental RLPx V5 (Topic Discovery) mechanism

  --netrestrict value                 Restricts network communication to the given IP networks (CIDR masks)

  --nodekey value                     P2P node key file

  --nodekeyhex value                  P2P node key as hex (for testing)

  

MINER OPTIONS:

  --mine                              Enable mining

  --miner.threads value               Number of CPU threads to use for mining (default: 0)

  --miner.notify value                Comma separated HTTP URL list to notify of new work packages

  --miner.gasprice value              Minimum gas price for mining a transaction (default: 1000000000)

  --miner.gastarget value             Target gas floor for mined blocks (default: 8000000)

  --miner.gaslimit value              Target gas ceiling for mined blocks (default: 8000000)

  --miner.etherbase value             Public address for block mining rewards (default = first account) (default: "0")

  --miner.extradata value             Block extra data set by the miner (default = client version)

  --miner.recommit value              Time interval to recreate the block being mined (default: 3s)

  --miner.noverify                    Disable remote sealing verification

  

GAS PRICE ORACLE OPTIONS:

  --gpoblocks value                   Number of recent blocks to check for gas prices (default: 20)

  --gpopercentile value               Suggested gas price is the given percentile of a set of recent transaction gas prices (default: 60)

  

VIRTUAL MACHINE OPTIONS:

  --vmdebug                           Record information useful for VM and contract debugging

  --vm.evm value                      External EVM configuration (default = built-in interpreter)

  --vm.ewasm value                    External ewasm configuration (default = built-in interpreter)

  

LOGGING AND DEBUGGING OPTIONS:

  --fakepow                           Disables proof-of-work verification

  --nocompaction                      Disables db compaction after import

  --verbosity value                   Logging verbosity: 0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail (default: 3)

  --vmodule value                     Per-module verbosity: comma-separated list of <pattern>=<level> (e.g. eth/*=5,p2p=4)

  --backtrace value                   Request a stack trace at a specific logging statement (e.g. "block.go:271")

  --debug                             Prepends log messages with call-site location (file and line number)

  --pprof                             Enable the pprof HTTP server

  --pprofaddr value                   pprof HTTP server listening interface (default: "127.0.0.1")

  --pprofport value                   pprof HTTP server listening port (default: 6060)

  --memprofilerate value              Turn on memory profiling with the given rate (default: 524288)

  --blockprofilerate value            Turn on block profiling with the given rate (default: 0)

  --cpuprofile value                  Write CPU profile to the given file

  --trace value                       Write execution trace to the given file

  

METRICS AND STATS OPTIONS:

  --metrics                           Enable metrics collection and reporting

  --metrics.expensive                 Enable expensive metrics collection and reporting

  --metrics.influxdb                  Enable metrics export/push to an external InfluxDB database

  --metrics.influxdb.endpoint value   InfluxDB API endpoint to report metrics to (default: "http://localhost:8086")

  --metrics.influxdb.database value   InfluxDB database name to push reported metrics to (default: "geth")

  --metrics.influxdb.username value   Username to authorize access to the database (default: "test")

  --metrics.influxdb.password value   Password to authorize access to the database (default: "test")

  --metrics.influxdb.tags value       Comma-separated InfluxDB tags (key/values) attached to all measurements (default: "host=localhost")

  

WHISPER (EXPERIMENTAL) OPTIONS:

  --shh                               Enable Whisper

  --shh.maxmessagesize value          Max message size accepted (default: 1048576)

  --shh.pow value                     Minimum POW accepted (default: 0.2)

  --shh.restrict-light                Restrict connection between two whisper light clients

  

DEPRECATED OPTIONS:

  --testnet                           Pre-configured test network (Deprecated: Please choose one of --goerli, --rinkeby, or --ropsten.)

  --lightserv value                   Maximum percentage of time allowed for serving LES requests (deprecated, use --light.serve) (default: 0)

  --lightpeers value                  Maximum number of light clients to serve, or light servers to attach to  (deprecated, use --light.maxpeers) (default: 100)

  --minerthreads value                Number of CPU threads to use for mining (deprecated, use --miner.threads) (default: 0)

  --targetgaslimit value              Target gas floor for mined blocks (deprecated, use --miner.gastarget) (default: 8000000)

  --gasprice value                    Minimum gas price for mining a transaction (deprecated, use --miner.gasprice) (default: 1000000000)

  --etherbase value                   Public address for block mining rewards (default = first account, deprecated, use --miner.etherbase) (default: "0")

  --extradata value                   Block extra data set by the miner (default = client version, deprecated, use --miner.extradata)

  

MISC OPTIONS:

  --override.istanbul value           Manually specify Istanbul fork-block, overriding the bundled setting (default: 0)

  --override.muirglacier value        Manually specify Muir Glacier fork-block, overriding the bundled setting (default: 0)

  --snapshot                          Enables snapshot-database mode -- experimental work in progress feature

  --help, -h                          show help
#+end_src

* TODO Find out what "intrinsic gas too low" means

* TODO Search for the error message in the source code of ~go-ethereum~

** DONE What is the error message we are looking for?
   CLOSED: [2021-12-31 Fri 12:53]

~exceeds block gas limit~

** Protocol

#+begin_src 
ErrGasLimit = errors.New("exceeds block gas limit")
#+end_src

** TODO Search for ~ErrGasLimit~

~/Users/dp118m/dev/misc/go-ethereum/light/txpool.go~

#+begin_src go
header := pool.chain.GetHeaderByHash(pool.head)
if header.GasLimit < tx.Gas() {
	return core.ErrGasLimit
}
#+end_src

** Thought

How can I see the values of

 * ~header.GasLimit~ and
 * ~tx.Gas()~?

   
** Thought: Can we get ~pool.chain.GetHeaderByHash(pool.head)~ in Java or log output?

* DONE Fix new exception
  CLOSED: [2021-12-31 Fri 22:02]

#+begin_src 
org.web3j.protocol.exceptions.TransactionException: Transaction 0xf8f477120b66a169ef6848a440b3c57a91833c100ce7d1b9da940b320e18e394 has failed with status: 0x0. Gas used: 23682. Revert reason: 'ERC20: transfer amount exceeds balance'.
#+end_src

* TODO Fix error: ~ERC20: transfer amount exceeds allowance~
  
#+begin_src 
org.web3j.protocol.exceptions.TransactionException: Transaction 0x411f395602ce361a05edd361d1d6cf6ef081f0f5e67d94f4e83aa04abdc215e5 has failed with status: 0x0. Gas used: 32767. Revert reason: 'ERC20: transfer amount exceeds allowance'.
#+end_src

* DONE Write message to StackOverflow
  CLOSED: [2021-12-31 Fri 22:24]


#+begin_src 
org.web3j.protocol.exceptions.TransactionException: Transaction 0x4bce379a2673c4564b2eb6080607b00d1a8ac232fbddf903f353f4eeda566cae has failed with status: 0x0. Gas used: 32767. Revert reason: 'ERC20: transfer amount exceeds allowance'.
#+end_src


#+begin_example
**Update 2:**

I made following changes:

1. The [set-up tutorial](https://dpisarenko.com/mce/en/how-to-start/) now contains step 7 in which ETH is added to the exchange account.
2. Now a new version of the [ETH testnet](https://github.com/mentiflectax/geth-poa-testnet) is being used, major changes being that log output is more verbose and the gas price is set to 1 (see `--miner.gasprice 1` in [entrypoint.sh](https://github.com/mentiflectax/geth-poa-testnet/blob/master/entrypoint.sh)).
3. Modified the code in [TransferUsdtToExchangeAccount](https://github.com/mentiflectax/minimal-crypto-exchange/blob/i16/process-engine/src/main/java/com/dpisarenko/minimalcryptoexchange/delegates/TransferUsdtToExchangeAccount.java) so that now USDT is transferred not from the exchange account (which has zero balance), but from the buffer account.

Now I am receiving the error

```
org.web3j.protocol.exceptions.TransactionException: Transaction 0x4bce379a2673c4564b2eb6080607b00d1a8ac232fbddf903f353f4eeda566cae has failed with status: 0x0. Gas used: 32767. Revert reason: 'ERC20: transfer amount exceeds allowance'.
```
#+end_example
